/*TOP*/
{"tagdepth":0,"version":"0.1.5","help":"mustache-builder v0.1.5\n====================================\n_\nUsage: \n   stache {input-filename}\n_\n   stache {input-filename} --output {output-filename}\n   == Output to {output-filename} instead of STDOUT\n_\n   stache -o\n   == Same as stache --output\n_\n   stache -o --auto\n   == Auto magic file name\n_\n   stache --tag\n   == Scan for the tag directory for imports\n_\n   stache --test\n   == Run the unit test\n_\n   stache --help\n   == Display this page\n_\n   stache {input-filename} --nominify\n   == Do not minify the output","didhelp":false,"argvfn":"./sta.che","foundargvfile":false,"src":"","js":false,"autofn":"","useauto":false,"tagdir":"./tags","tagstr":"","usetags":false,"view":{},"test":false,"minify":true,"compiled":"","minified":"","fout":false,"out":"","_":{}}/*BOTTOM*/
{"tagdepth":0,"version":"0.1.5","help":"mustache-builder v0.1.5\n====================================\n_\nUsage: \n   stache {input-filename}\n_\n   stache {input-filename} --output {output-filename}\n   == Output to {output-filename} instead of STDOUT\n_\n   stache -o\n   == Same as stache --output\n_\n   stache -o --auto\n   == Auto magic file name\n_\n   stache --tag\n   == Scan for the tag directory for imports\n_\n   stache --test\n   == Run the unit test\n_\n   stache --help\n   == Display this page\n_\n   stache {input-filename} --nominify\n   == Do not minify the output","didhelp":false,"argvfn":"./sta.che","foundargvfile":false,"src":"","js":false,"autofn":"","useauto":false,"tagdir":"./tags","tagstr":"","usetags":false,"view":{},"test":false,"minify":true,"compiled":"","minified":"","fout":false,"out":"","_":{}}/*TOP*/
{"tagdepth":0,"version":"0.1.5","help":"mustache-builder v0.1.5\n====================================\n_\nUsage: \n   stache {input-filename}\n_\n   stache {input-filename} --output {output-filename}\n   == Output to {output-filename} instead of STDOUT\n_\n   stache -o\n   == Same as stache --output\n_\n   stache -o --auto\n   == Auto magic file name\n_\n   stache --tag\n   == Scan for the tag directory for imports\n_\n   stache --test\n   == Run the unit test\n_\n   stache --help\n   == Display this page\n_\n   stache {input-filename} --nominify\n   == Do not minify the output","didhelp":false,"argvfn":"./sta.che","foundargvfile":false,"src":"","js":false,"autofn":"","useauto":false,"tagdir":"./tags","tagstr":"","usetags":false,"view":{},"test":false,"minify":true,"compiled":"","minified":"","fout":false,"out":"","_":{}}/*BOTTOM*/
{"tagdepth":0,"version":"0.1.5","help":"mustache-builder v0.1.5\n====================================\n_\nUsage: \n   stache {input-filename}\n_\n   stache {input-filename} --output {output-filename}\n   == Output to {output-filename} instead of STDOUT\n_\n   stache -o\n   == Same as stache --output\n_\n   stache -o --auto\n   == Auto magic file name\n_\n   stache --tag\n   == Scan for the tag directory for imports\n_\n   stache --test\n   == Run the unit test\n_\n   stache --help\n   == Display this page\n_\n   stache {input-filename} --nominify\n   == Do not minify the output","didhelp":false,"argvfn":"./sta.che","foundargvfile":false,"src":"","js":false,"autofn":"","useauto":false,"tagdir":"./tags","tagstr":"","usetags":false,"view":{},"test":false,"minify":true,"compiled":"","minified":"","fout":false,"out":"","_":{}}/*TOP*/
{"tagdepth":0,"version":"0.1.5","help":"mustache-builder v0.1.5\n====================================\n_\nUsage: \n   stache {input-filename}\n_\n   stache {input-filename} --output {output-filename}\n   == Output to {output-filename} instead of STDOUT\n_\n   stache -o\n   == Same as stache --output\n_\n   stache -o --auto\n   == Auto magic file name\n_\n   stache --tag\n   == Scan for the tag directory for imports\n_\n   stache --test\n   == Run the unit test\n_\n   stache --help\n   == Display this page\n_\n   stache {input-filename} --nominify\n   == Do not minify the output","didhelp":false,"argvfn":"./sta.che","foundargvfile":false,"src":"","js":false,"autofn":"","useauto":false,"tagdir":"./tags","tagstr":"","usetags":false,"view":{},"test":false,"minify":true,"compiled":"","minified":"","fout":false,"out":"","_":{}}/*END IS*/
{"tagdepth":0,"version":"0.1.5","help":"mustache-builder v0.1.5\n====================================\n_\nUsage: \n   stache {input-filename}\n_\n   stache {input-filename} --output {output-filename}\n   == Output to {output-filename} instead of STDOUT\n_\n   stache -o\n   == Same as stache --output\n_\n   stache -o --auto\n   == Auto magic file name\n_\n   stache --tag\n   == Scan for the tag directory for imports\n_\n   stache --test\n   == Run the unit test\n_\n   stache --help\n   == Display this page\n_\n   stache {input-filename} --nominify\n   == Do not minify the output","didhelp":false,"argvfn":"./sta.che","foundargvfile":false,"src":"/* mustache-builder\n * mustache powered JavaScript building!\n * (c) 2012 David (daXXog) Volm ><> + + + <><\n * Released under Apache License, Version 2.0:\n * http://www.apache.org/licenses/LICENSE-2.0.html  \n * \n ==\n * mustache-builder test\n *\n * Usage: \n * stache --test\n */\n\n//{{^test}}\nvar fail = false;\n//{{/test}}\n\n//{{#test}}\nvar fail = true;\n//{{/test}}\n\nif(fail) {\n    stache.out = 'test failed!';\n} else {\n    stache.out = 'test successful!';\n}","js":"/var/lib/stickshift/7f6a63abb5fe40db84aab8eb7445a891/app-root/data/317606/lib/test.js","autofn":"","useauto":false,"tagdir":"./tags","tagstr":"","usetags":false,"view":{},"test":true,"minify":true,"compiled":"/* mustache-builder\n * mustache powered JavaScript building!\n * (c) 2012 David (daXXog) Volm ><> + + + <><\n * Released under Apache License, Version 2.0:\n * http://www.apache.org/licenses/LICENSE-2.0.html  \n * \n ==\n * mustache-builder test\n *\n * Usage: \n * stache --test\n */\n\n//\nvar fail = false;\n//\n\n//\n\nif(fail) {\n    stache.out = 'test failed!';\n} else {\n    stache.out = 'test successful!';\n}","minified":"","fout":false,"out":"","_":{}}/*BOTTOM*/
{"tagdepth":0,"version":"0.1.5","help":"mustache-builder v0.1.5\n====================================\n_\nUsage: \n   stache {input-filename}\n_\n   stache {input-filename} --output {output-filename}\n   == Output to {output-filename} instead of STDOUT\n_\n   stache -o\n   == Same as stache --output\n_\n   stache -o --auto\n   == Auto magic file name\n_\n   stache --tag\n   == Scan for the tag directory for imports\n_\n   stache --test\n   == Run the unit test\n_\n   stache --help\n   == Display this page\n_\n   stache {input-filename} --nominify\n   == Do not minify the output","didhelp":false,"argvfn":"./sta.che","foundargvfile":false,"src":"/* mustache-builder\n * mustache powered JavaScript building!\n * (c) 2012 David (daXXog) Volm ><> + + + <><\n * Released under Apache License, Version 2.0:\n * http://www.apache.org/licenses/LICENSE-2.0.html  \n * \n ==\n * mustache-builder test\n *\n * Usage: \n * stache --test\n */\n\n//{{^test}}\nvar fail = false;\n//{{/test}}\n\n//{{#test}}\nvar fail = true;\n//{{/test}}\n\nif(fail) {\n    stache.out = 'test failed!';\n} else {\n    stache.out = 'test successful!';\n}","js":"/var/lib/stickshift/7f6a63abb5fe40db84aab8eb7445a891/app-root/data/317606/lib/test.js","autofn":"","useauto":false,"tagdir":"./tags","tagstr":"","usetags":false,"view":{},"test":true,"minify":true,"compiled":"/* mustache-builder\n * mustache powered JavaScript building!\n * (c) 2012 David (daXXog) Volm ><> + + + <><\n * Released under Apache License, Version 2.0:\n * http://www.apache.org/licenses/LICENSE-2.0.html  \n * \n ==\n * mustache-builder test\n *\n * Usage: \n * stache --test\n */\n\n//\nvar fail = false;\n//\n\n//\n\nif(fail) {\n    stache.out = 'test failed!';\n} else {\n    stache.out = 'test successful!';\n}","minified":"","fout":false,"out":"","_":{}}/*TOP*/
{"tagdepth":0,"version":"0.1.5","help":"mustache-builder v0.1.5\n====================================\n_\nUsage: \n   stache {input-filename}\n_\n   stache {input-filename} --output {output-filename}\n   == Output to {output-filename} instead of STDOUT\n_\n   stache -o\n   == Same as stache --output\n_\n   stache -o --auto\n   == Auto magic file name\n_\n   stache --tag\n   == Scan for the tag directory for imports\n_\n   stache --test\n   == Run the unit test\n_\n   stache --help\n   == Display this page\n_\n   stache {input-filename} --nominify\n   == Do not minify the output","didhelp":false,"argvfn":"./sta.che","foundargvfile":false,"src":"","js":false,"autofn":"","useauto":false,"tagdir":"./tags","tagstr":"","usetags":false,"view":{},"test":false,"minify":true,"compiled":"","minified":"","fout":false,"out":"","_":{}}/*BOTTOM*/
{"tagdepth":0,"version":"0.1.5","help":"mustache-builder v0.1.5\n====================================\n_\nUsage: \n   stache {input-filename}\n_\n   stache {input-filename} --output {output-filename}\n   == Output to {output-filename} instead of STDOUT\n_\n   stache -o\n   == Same as stache --output\n_\n   stache -o --auto\n   == Auto magic file name\n_\n   stache --tag\n   == Scan for the tag directory for imports\n_\n   stache --test\n   == Run the unit test\n_\n   stache --help\n   == Display this page\n_\n   stache {input-filename} --nominify\n   == Do not minify the output","didhelp":false,"argvfn":"./sta.che","foundargvfile":false,"src":"","js":false,"autofn":"","useauto":false,"tagdir":"./tags","tagstr":"","usetags":false,"view":{},"test":false,"minify":true,"compiled":"","minified":"","fout":false,"out":"","_":{}}/*TOP*/
{"tagdepth":0,"version":"0.1.5","help":"mustache-builder v0.1.5\n====================================\n_\nUsage: \n   stache {input-filename}\n_\n   stache {input-filename} --output {output-filename}\n   == Output to {output-filename} instead of STDOUT\n_\n   stache -o\n   == Same as stache --output\n_\n   stache -o --auto\n   == Auto magic file name\n_\n   stache --tag\n   == Scan for the tag directory for imports\n_\n   stache --test\n   == Run the unit test\n_\n   stache --help\n   == Display this page\n_\n   stache {input-filename} --nominify\n   == Do not minify the output","didhelp":false,"argvfn":"./sta.che","foundargvfile":false,"src":"","js":false,"autofn":"","useauto":false,"tagdir":"./tags","tagstr":"","usetags":false,"view":{},"test":false,"minify":true,"compiled":"","minified":"","fout":false,"out":"","_":{}}/*BOTTOM*/
{"tagdepth":0,"version":"0.1.5","help":"mustache-builder v0.1.5\n====================================\n_\nUsage: \n   stache {input-filename}\n_\n   stache {input-filename} --output {output-filename}\n   == Output to {output-filename} instead of STDOUT\n_\n   stache -o\n   == Same as stache --output\n_\n   stache -o --auto\n   == Auto magic file name\n_\n   stache --tag\n   == Scan for the tag directory for imports\n_\n   stache --test\n   == Run the unit test\n_\n   stache --help\n   == Display this page\n_\n   stache {input-filename} --nominify\n   == Do not minify the output","didhelp":false,"argvfn":"./sta.che","foundargvfile":false,"src":"","js":false,"autofn":"","useauto":false,"tagdir":"./tags","tagstr":"","usetags":false,"view":{},"test":false,"minify":true,"compiled":"","minified":"","fout":false,"out":"","_":{}}/*TOP*/
{"tagdepth":0,"version":"0.1.5","help":"mustache-builder v0.1.5\n====================================\n_\nUsage: \n   stache {input-filename}\n_\n   stache {input-filename} --output {output-filename}\n   == Output to {output-filename} instead of STDOUT\n_\n   stache -o\n   == Same as stache --output\n_\n   stache -o --auto\n   == Auto magic file name\n_\n   stache --tag\n   == Scan for the tag directory for imports\n_\n   stache --test\n   == Run the unit test\n_\n   stache --help\n   == Display this page\n_\n   stache {input-filename} --nominify\n   == Do not minify the output","didhelp":false,"argvfn":"./sta.che","foundargvfile":false,"src":"","js":false,"autofn":"","useauto":false,"tagdir":"./tags","tagstr":"","usetags":false,"view":{},"test":false,"minify":true,"compiled":"","minified":"","fout":false,"out":"","_":{}}/*END IS*/
{"tagdepth":0,"version":"0.1.5","help":"mustache-builder v0.1.5\n====================================\n_\nUsage: \n   stache {input-filename}\n_\n   stache {input-filename} --output {output-filename}\n   == Output to {output-filename} instead of STDOUT\n_\n   stache -o\n   == Same as stache --output\n_\n   stache -o --auto\n   == Auto magic file name\n_\n   stache --tag\n   == Scan for the tag directory for imports\n_\n   stache --test\n   == Run the unit test\n_\n   stache --help\n   == Display this page\n_\n   stache {input-filename} --nominify\n   == Do not minify the output","didhelp":false,"argvfn":"./sta.che","foundargvfile":false,"src":"/* mustache-builder\n * mustache powered JavaScript building!\n * (c) 2012 David (daXXog) Volm ><> + + + <><\n * Released under Apache License, Version 2.0:\n * http://www.apache.org/licenses/LICENSE-2.0.html  \n * \n ==\n * mustache-builder test\n *\n * Usage: \n * stache --test\n */\n\n//{{^test}}\nvar fail = false;\n//{{/test}}\n\n//{{#test}}\nvar fail = true;\n//{{/test}}\n\nif(fail) {\n    stache.out = 'test failed!';\n} else {\n    stache.out = 'test successful!';\n}","js":"/var/lib/stickshift/7f6a63abb5fe40db84aab8eb7445a891/app-root/data/317606/lib/test.js","autofn":"","useauto":false,"tagdir":"./tags","tagstr":"","usetags":false,"view":{},"test":true,"minify":true,"compiled":"/* mustache-builder\n * mustache powered JavaScript building!\n * (c) 2012 David (daXXog) Volm ><> + + + <><\n * Released under Apache License, Version 2.0:\n * http://www.apache.org/licenses/LICENSE-2.0.html  \n * \n ==\n * mustache-builder test\n *\n * Usage: \n * stache --test\n */\n\n//\nvar fail = false;\n//\n\n//\n\nif(fail) {\n    stache.out = 'test failed!';\n} else {\n    stache.out = 'test successful!';\n}","minified":"","fout":false,"out":"","_":{}}/*BOTTOM*/
{"tagdepth":0,"version":"0.1.5","help":"mustache-builder v0.1.5\n====================================\n_\nUsage: \n   stache {input-filename}\n_\n   stache {input-filename} --output {output-filename}\n   == Output to {output-filename} instead of STDOUT\n_\n   stache -o\n   == Same as stache --output\n_\n   stache -o --auto\n   == Auto magic file name\n_\n   stache --tag\n   == Scan for the tag directory for imports\n_\n   stache --test\n   == Run the unit test\n_\n   stache --help\n   == Display this page\n_\n   stache {input-filename} --nominify\n   == Do not minify the output","didhelp":false,"argvfn":"./sta.che","foundargvfile":false,"src":"/* mustache-builder\n * mustache powered JavaScript building!\n * (c) 2012 David (daXXog) Volm ><> + + + <><\n * Released under Apache License, Version 2.0:\n * http://www.apache.org/licenses/LICENSE-2.0.html  \n * \n ==\n * mustache-builder test\n *\n * Usage: \n * stache --test\n */\n\n//{{^test}}\nvar fail = false;\n//{{/test}}\n\n//{{#test}}\nvar fail = true;\n//{{/test}}\n\nif(fail) {\n    stache.out = 'test failed!';\n} else {\n    stache.out = 'test successful!';\n}","js":"/var/lib/stickshift/7f6a63abb5fe40db84aab8eb7445a891/app-root/data/317606/lib/test.js","autofn":"","useauto":false,"tagdir":"./tags","tagstr":"","usetags":false,"view":{},"test":true,"minify":true,"compiled":"/* mustache-builder\n * mustache powered JavaScript building!\n * (c) 2012 David (daXXog) Volm ><> + + + <><\n * Released under Apache License, Version 2.0:\n * http://www.apache.org/licenses/LICENSE-2.0.html  \n * \n ==\n * mustache-builder test\n *\n * Usage: \n * stache --test\n */\n\n//\nvar fail = false;\n//\n\n//\n\nif(fail) {\n    stache.out = 'test failed!';\n} else {\n    stache.out = 'test successful!';\n}","minified":"","fout":false,"out":"","_":{}}/*TOP*/
{"tagdepth":0,"version":"0.1.5","help":"mustache-builder v0.1.5\n====================================\n_\nUsage: \n   stache {input-filename}\n_\n   stache {input-filename} --output {output-filename}\n   == Output to {output-filename} instead of STDOUT\n_\n   stache -o\n   == Same as stache --output\n_\n   stache -o --auto\n   == Auto magic file name\n_\n   stache --tag\n   == Scan for the tag directory for imports\n_\n   stache --test\n   == Run the unit test\n_\n   stache --help\n   == Display this page\n_\n   stache {input-filename} --nominify\n   == Do not minify the output","didhelp":false,"argvfn":"./sta.che","foundargvfile":false,"src":"","js":false,"autofn":"","useauto":false,"tagdir":"./tags","tagstr":"","usetags":false,"view":{},"test":false,"minify":true,"compiled":"","minified":"","fout":false,"out":"","_":{}}/*BOTTOM*/
{"tagdepth":0,"version":"0.1.5","help":"mustache-builder v0.1.5\n====================================\n_\nUsage: \n   stache {input-filename}\n_\n   stache {input-filename} --output {output-filename}\n   == Output to {output-filename} instead of STDOUT\n_\n   stache -o\n   == Same as stache --output\n_\n   stache -o --auto\n   == Auto magic file name\n_\n   stache --tag\n   == Scan for the tag directory for imports\n_\n   stache --test\n   == Run the unit test\n_\n   stache --help\n   == Display this page\n_\n   stache {input-filename} --nominify\n   == Do not minify the output","didhelp":false,"argvfn":"./sta.che","foundargvfile":false,"src":"","js":false,"autofn":"","useauto":false,"tagdir":"./tags","tagstr":"","usetags":false,"view":{},"test":false,"minify":true,"compiled":"","minified":"","fout":false,"out":"","_":{}}/*TOP*/
{"tagdepth":0,"version":"0.1.5","help":"mustache-builder v0.1.5\n====================================\n_\nUsage: \n   stache {input-filename}\n_\n   stache {input-filename} --output {output-filename}\n   == Output to {output-filename} instead of STDOUT\n_\n   stache -o\n   == Same as stache --output\n_\n   stache -o --auto\n   == Auto magic file name\n_\n   stache --tag\n   == Scan for the tag directory for imports\n_\n   stache --test\n   == Run the unit test\n_\n   stache --help\n   == Display this page\n_\n   stache {input-filename} --nominify\n   == Do not minify the output","didhelp":false,"argvfn":"./sta.che","foundargvfile":false,"src":"","js":false,"autofn":"","useauto":false,"tagdir":"./tags","tagstr":"","usetags":false,"view":{},"test":false,"minify":true,"compiled":"","minified":"","fout":false,"out":"","_":{}}/*BOTTOM*/
{"tagdepth":0,"version":"0.1.5","help":"mustache-builder v0.1.5\n====================================\n_\nUsage: \n   stache {input-filename}\n_\n   stache {input-filename} --output {output-filename}\n   == Output to {output-filename} instead of STDOUT\n_\n   stache -o\n   == Same as stache --output\n_\n   stache -o --auto\n   == Auto magic file name\n_\n   stache --tag\n   == Scan for the tag directory for imports\n_\n   stache --test\n   == Run the unit test\n_\n   stache --help\n   == Display this page\n_\n   stache {input-filename} --nominify\n   == Do not minify the output","didhelp":false,"argvfn":"./sta.che","foundargvfile":false,"src":"","js":false,"autofn":"","useauto":false,"tagdir":"./tags","tagstr":"","usetags":false,"view":{},"test":false,"minify":true,"compiled":"","minified":"","fout":false,"out":"","_":{}}/*TOP*/
{"tagdepth":0,"version":"0.1.5","help":"mustache-builder v0.1.5\n====================================\n_\nUsage: \n   stache {input-filename}\n_\n   stache {input-filename} --output {output-filename}\n   == Output to {output-filename} instead of STDOUT\n_\n   stache -o\n   == Same as stache --output\n_\n   stache -o --auto\n   == Auto magic file name\n_\n   stache --tag\n   == Scan for the tag directory for imports\n_\n   stache --test\n   == Run the unit test\n_\n   stache --help\n   == Display this page\n_\n   stache {input-filename} --nominify\n   == Do not minify the output","didhelp":false,"argvfn":"./sta.che","foundargvfile":false,"src":"","js":false,"autofn":"","useauto":false,"tagdir":"./tags","tagstr":"","usetags":false,"view":{},"test":false,"minify":true,"compiled":"","minified":"","fout":false,"out":"","_":{}}/*END IS*/
{"tagdepth":0,"version":"0.1.5","help":"mustache-builder v0.1.5\n====================================\n_\nUsage: \n   stache {input-filename}\n_\n   stache {input-filename} --output {output-filename}\n   == Output to {output-filename} instead of STDOUT\n_\n   stache -o\n   == Same as stache --output\n_\n   stache -o --auto\n   == Auto magic file name\n_\n   stache --tag\n   == Scan for the tag directory for imports\n_\n   stache --test\n   == Run the unit test\n_\n   stache --help\n   == Display this page\n_\n   stache {input-filename} --nominify\n   == Do not minify the output","didhelp":false,"argvfn":"./sta.che","foundargvfile":false,"src":"/* mustache-builder\n * mustache powered JavaScript building!\n * (c) 2012 David (daXXog) Volm ><> + + + <><\n * Released under Apache License, Version 2.0:\n * http://www.apache.org/licenses/LICENSE-2.0.html  \n * \n ==\n * mustache-builder test\n *\n * Usage: \n * stache --test\n */\n\n//{{^test}}\nvar fail = false;\n//{{/test}}\n\n//{{#test}}\nvar fail = true;\n//{{/test}}\n\nif(fail) {\n    stache.out = 'test failed!';\n} else {\n    stache.out = 'test successful!';\n}","js":"/var/lib/stickshift/7f6a63abb5fe40db84aab8eb7445a891/app-root/data/317606/lib/test.js","autofn":"","useauto":false,"tagdir":"./tags","tagstr":"","usetags":false,"view":{},"test":true,"minify":true,"compiled":"/* mustache-builder\n * mustache powered JavaScript building!\n * (c) 2012 David (daXXog) Volm ><> + + + <><\n * Released under Apache License, Version 2.0:\n * http://www.apache.org/licenses/LICENSE-2.0.html  \n * \n ==\n * mustache-builder test\n *\n * Usage: \n * stache --test\n */\n\n//\nvar fail = false;\n//\n\n//\n\nif(fail) {\n    stache.out = 'test failed!';\n} else {\n    stache.out = 'test successful!';\n}","minified":"var fail=!1;stache.out=fail?\"test failed!\":\"test successful!\";","fout":false,"out":"test successful!","_":{}}/*BOTTOM*/
{"tagdepth":0,"version":"0.1.5","help":"mustache-builder v0.1.5\n====================================\n_\nUsage: \n   stache {input-filename}\n_\n   stache {input-filename} --output {output-filename}\n   == Output to {output-filename} instead of STDOUT\n_\n   stache -o\n   == Same as stache --output\n_\n   stache -o --auto\n   == Auto magic file name\n_\n   stache --tag\n   == Scan for the tag directory for imports\n_\n   stache --test\n   == Run the unit test\n_\n   stache --help\n   == Display this page\n_\n   stache {input-filename} --nominify\n   == Do not minify the output","didhelp":false,"argvfn":"./sta.che","foundargvfile":false,"src":"/* mustache-builder\n * mustache powered JavaScript building!\n * (c) 2012 David (daXXog) Volm ><> + + + <><\n * Released under Apache License, Version 2.0:\n * http://www.apache.org/licenses/LICENSE-2.0.html  \n * \n ==\n * mustache-builder test\n *\n * Usage: \n * stache --test\n */\n\n//{{^test}}\nvar fail = false;\n//{{/test}}\n\n//{{#test}}\nvar fail = true;\n//{{/test}}\n\nif(fail) {\n    stache.out = 'test failed!';\n} else {\n    stache.out = 'test successful!';\n}","js":"/var/lib/stickshift/7f6a63abb5fe40db84aab8eb7445a891/app-root/data/317606/lib/test.js","autofn":"","useauto":false,"tagdir":"./tags","tagstr":"","usetags":false,"view":{},"test":true,"minify":true,"compiled":"/* mustache-builder\n * mustache powered JavaScript building!\n * (c) 2012 David (daXXog) Volm ><> + + + <><\n * Released under Apache License, Version 2.0:\n * http://www.apache.org/licenses/LICENSE-2.0.html  \n * \n ==\n * mustache-builder test\n *\n * Usage: \n * stache --test\n */\n\n//\nvar fail = false;\n//\n\n//\n\nif(fail) {\n    stache.out = 'test failed!';\n} else {\n    stache.out = 'test successful!';\n}","minified":"var fail=!1;stache.out=fail?\"test failed!\":\"test successful!\";","fout":false,"out":"test successful!","_":{}}